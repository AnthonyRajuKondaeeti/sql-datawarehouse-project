-- Explore ALl objects in the Database
SELECT * FROM INFORMATION_SCHEMA.TABLES

-- Explore all Columns in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

-- Explore all Countries our customers come from
SELECT DISTINCT country FROM gold.dim_customers

-- Exlore all Product Categories 
SELECT DISTINCT category,subcategory,product_name 
FROM gold.dim_products
ORDER BY 1,2,3

-- Explore date boundaries
-- Find the date of the first and last order
SELECT 
	MIN(order_date) AS first_order,
	MAX(order_date) AS last_order,
	DATEDIFF(YEAR,MIN(order_date),MAX(order_date)) years_of_sales-- How many years of sales are available
FROM gold.fact_sales

-- Find the youngest and oldest customer
SELECT
	MIN(birthdate) AS oldest_customer,
	DATEDIFF(YEAR,MIN(birthdate),GETDATE()) AS oldest_coustomer_age,
	MAX(birthdate) AS youngest_customer
FROM gold.dim_customers

-- Measures Exploration
--Find the Total Sales
SELECT SUM(sales_amount) AS total_sales 
FROM gold.fact_sales
--Find how many items are sold
SELECT SUM(quantity) AS total_items 
FROM gold.fact_sales
--Find the average selling price
SELECT AVG(price) AS avg_selling_price 
FROM gold.fact_sales
--Find the Total number of Orders
SELECT COUNT(DISTINCT order_number) AS total_orders
FROM gold.fact_sales
--Find the total no. of products
SELECT COUNT(DISTINCT product_name) AS total_products
FROM gold.dim_products
--Find the total no. of customers
SELECT COUNT(DISTINCT customer_key) AS total_customers
FROM gold.dim_customers
--Find the total no. of customers that has placed an order
SELECT COUNT(DISTINCT customer_key)
FROM gold.fact_sales

--Generate a Report that shows all key metrics of the business
SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity' AS measure_name, SUM(quantity) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Average Price' AS measure_name, AVG(price) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total No. of Orders' AS measure_name, COUNT(DISTINCT order_number) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total No. of Products' AS measure_name, COUNT(DISTINCT product_name) AS measure_value FROM gold.dim_products
UNION ALL
SELECT 'Total No. of Customers' AS measure_name, COUNT(DISTINCT customer_key) AS measure_value FROM gold.dim_customers

--Magnitue Exploration

--Find total customers by countries
SELECT country,COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY total_customers DESC

-- Find total customers by gender
SELECT gender,COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY total_customers DESC

--Find total products by category
SELECT category,COUNT(product_name) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY total_products DESC

--What is the avg costs in each category?
SELECT category,AVG(cost) AS avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY avg_cost DESC

--What is the total revenue generated for each category?
SELECT p.category,SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p 
ON p.product_key = f.product_key
GROUP BY category
ORDER BY total_revenue DESC

--Find total revenue generated by each customer
SELECT f.customer_key,c.first_name,c.last_name,SUM(sales_amount) AS total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key=c.customer_key
GROUP BY f.customer_key,c.first_name,c.last_name
ORDER BY total_revenue DESC

--What is the distribution of items sold across countries?
SELECT c.country,SUM(f.quantity) AS total_sold_items
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON f.customer_key=c.customer_key
GROUP BY c.country
ORDER BY total_sold_items DESC

--Ranking Analysis

--Which 5 products generate the higest revenue?
SELECT TOP 5 
	p.product_name,
	SUM(f.sales_amount) revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key=f.product_key
GROUP BY p.product_name
ORDER BY revenue DESC

			--[OR]

SELECT 
	product_name, revenue
FROM (
	SELECT 
		p.product_name,
		SUM(f.sales_amount) revenue,
		ROW_NUMBER() OVER(ORDER BY SUM(f.sales_amount) DESC) AS rank_products
	FROM gold.fact_sales f
	LEFT JOIN gold.dim_products p
	ON p.product_key=f.product_key
	GROUP BY p.product_name)t
WHERE rank_products<=5

-- What are the 5 worst-performing products in terms of sales?
SELECT TOP 5 
	p.product_name,
	SUM(f.sales_amount) revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key=f.product_key
GROUP BY p.product_name
ORDER BY revenue 

-- Find the top 10 customers who have generated the highest revenue
SELECT 
	customer_key,
	first_name,
	last_name,
	revenue
FROM
	(SELECT 
		c.customer_key,
		c.first_name,
		c.last_name,
		SUM(f.sales_amount) AS revenue,
		ROW_NUMBER() OVER(ORDER BY SUM(f.sales_amount) DESC) rank_customer
	FROM gold.fact_sales f
	LEFT JOIN gold.dim_customers c
	ON c.customer_key=f.customer_key
	GROUP BY c.customer_key,c.first_name,c.last_name)t
Where rank_customer<=10

-- The 3 customers with the fewest orders placed
SELECT TOP 3
f.customer_key,
c.first_name,
c.last_name,
COUNT(DISTINCT f.order_number) AS total_orders
FROM gold.fact_sales f
LEFT JOIN gold.dim_customers c
ON c.customer_key=f.customer_key
GROUP BY f.customer_key,c.first_name,c.last_name
ORDER BY total_orders
